---
# *****************************************************************************
# Ansible Playbook to Configure Fedora
# *****************************************************************************

- name: Initial Fedora Configuration
  hosts: localhost
  connection: local
  become: true
  vars_files:
    - vars.yml

  tasks:
  
    - name: Set timezone
      community.general.timezone:
        name: Europe/London
    
    - name: Set hostname
      hostname:
        name: "{{ hostname }}"

    - name: Install RPM Fusion
      dnf:
        name: "{{ item.name }}"
        state: present
        disable_gpg_check: yes
      with_items:
        - { name: "https://mirrors.rpmfusion.org/free/fedora/rpmfusion-free-release-{{ ansible_distribution_major_version }}.noarch.rpm" }
        - { name: "https://mirrors.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-{{ ansible_distribution_major_version }}.noarch.rpm" }

    - name: Import 1Password Repo Key
      rpm_key:
        state: present
        key: "https://downloads.1password.com/linux/keys/1password.asc"

    - name: Add repositories
      command: "{{ item.command }}"
      with_items:
        - { command: "dnf-3 config-manager --add-repo https://download.docker.com/linux/fedora/docker-ce.repo" }

    - name: Add 1Password repository
      copy:
        dest: /etc/yum.repos.d/1password.repo
        mode: 0644
        content: |
          [1password]
          name=1Password Stable Channel
          baseurl=https://downloads.1password.com/linux/rpm/stable/$basearch
          enabled=1
          gpgcheck=1
          repo_gpgcheck=1
          gpgkey=https://downloads.1password.com/linux/keys/1password.asc

    - name: Update repositories and packages
      dnf:
        name: "*"
        state: latest
        update_cache: yes
    
    - name: Install packages
      dnf:
        state: latest
        name: 
          - 1password
          - ImageMagick
          - ShellCheck
          - android-tools
          - avidemux
          - calibre
          - chromium
          - cifs-utils
          - containerd.io
          - copyq
          - cronie
          - curl
          - dconf-editor
          - dnsutils
          - docker-ce
          - docker-ce-cli
          - docker-buildx-plugin
          - docker-compose-plugin
          - fd-find
          - ffmpeg
          - fish
          - flameshot
          - fzf
          - gcc
          - git
          - gnome-extensions-app
          - gnome-shell-extension-user-theme
          - gnome-themes-extra
          - gnome-tweaks
          - hledger
          - hledger-web
          - ipcalc
          - jq
          - kitty
          - libxdo
          - lm_sensors
          - net-tools
          - neovim
          - nmap
          - nodejs
          - openssl
          - p7zip
          - p7zip-plugins
          - pandoc
          - python3-devel
          - python3-pip
          - qalc
          - qpdf
          - qrencode
          - remmina
          - ripgrep
          - sqlitebrowser
          - tmux
          - tree
          - vim
          - vim-X11
          - vim-common
          - vlc
          - vorta
          - wireguard
          - wireguard-tools
          - wget
          - wol
          - xclip
          - xrandr
          - yarnpkg

    - name: Give me back Xorg!
      dnf:
        state: latest
        name:
          - gnome-session-xsession
          - xorg-x11-drivers
          - xorg-x11-xinit

    - name: Install Package Groups
      dnf:
        name: "@Multimedia"
        state: present

    - name: Add the flathub flatpak repository remote to the user installation
      flatpak_remote:
        name: flathub
        state: present
        flatpakrepo_url: https://flathub.org/repo/flathub.flatpakrepo
    
    - name: Install FlatHub packages
      flatpak:
        name: "{{ item.name }}"
        state: present
      with_items:
        - { name: org.telegram.desktop }
        - { name: md.obsidian.Obsidian }
        - { name: com.jgraph.drawio.desktop }

    - name: Install Python Packages
      pip:
        name:
          - black
          - jmespath
          - pipreqs
          - psutil
          - pylint
          - requests
          - spotdl
          - yt-dlp
        extra_args: --user
      become_user: "{{ personal_username }}"

    - name: Make vim-plug directory
      file:
        path: "/home/{{ personal_username }}/.vim/autoload"
        owner: "{{ personal_username }}"
        group: "{{ personal_username }}"
        recurse: yes      

    - name: Download Vim Plug
      get_url:
        url: https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
        dest: "/home/{{ personal_username }}/.vim/autoload/plug.vim"
        owner: "{{ personal_username }}"
        group: "{{ personal_username }}"

    - name: Add user to groups
      ansible.builtin.user:
        name: "{{ personal_username }}"
        groups:
          - "{{ personal_username }}"
          - wheel
          - docker
    
    - name: Remove default folders
      file:
        path: "/home/{{ personal_username }}/{{ item.path }}"
        state: absent
      with_items:
        - { path: Desktop }
        - { path: Documents }
        - { path: Music }
        - { path: Pictures }
        - { path: Public }
        - { path: Templates }
        - { path: Videos }
    
    - name: Create home directories
      file:
        path: "{{ item.path }}"
        state: directory
        owner: "{{ personal_username }}"
        group: "{{ personal_username }}"
        recurse: yes
      with_items:
        - { path: "/home/{{ personal_username }}/.themes/custom/gnome-shell" }
        - { path: "/home/{{ personal_username }}/Screenshots" }

    - name: Add regular Unison file syncs
      ansible.builtin.cron:
        name: "Unison Sync"
        minute: "*/5"
        hour: "*"
        weekday: "*"
        job: |
          docker run --rm --user 1000:1000 --env UNISONLOCALHOSTNAME={{ hostname }} --volume /etc/timezone:/etc/timezone:ro --volume /etc/localtime:/etc/localtime:ro --volume /etc/passwd:/etc/passwd --volume $HOME/.unison:/home/{{ personal_username }}/.unison --volume $HOME/.unison_sync_{{ hostname }}.log:/home/{{ personal_username }}/.unison_sync_{{ hostname }}.log --volume $HOME/.ssh/host-01:/home/{{ personal_username }}/.ssh/host-01 --volume $HOME/.ssh/known_hosts:/home/{{ personal_username }}/.ssh/known_hosts --volume $HOME/my:/home/{{ personal_username }}/my --tty jakepricedev/docker-unison:2.52.1-r0 -batch {{ hostname }} && curl --fail --silent --show-error --retry 5 --output /dev/null {{ healthcheck_unison }}
      become_user: "{{ personal_username }}"

    - name: Add regular Firefox history exports
      ansible.builtin.cron:
        name: "Firefox History Exports"
        minute: "5"
        hour: "*"
        weekday: "*"
        job: |
          cd $HOME/my/files/code/universal-search/pipeline && /usr/bin/python generate_ts_index_firefox_history.py --config_file config.dev.yml
      become_user: "{{ personal_username }}"

    - name: Download fonts and additional packages
      unarchive:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: "{{ personal_username }}"
        group: "{{ personal_username }}"
        remote_src: yes
      with_items:
        - { src: "https://assets.ubuntu.com/v1/0cef8205-ubuntu-font-family-0.83.zip", dest: /tmp }
        - { src: "https://github.com/atuinsh/atuin/releases/download/v18.4.0/atuin-x86_64-unknown-linux-gnu.tar.gz", dest: /tmp }
        - { src: "https://github.com/rsms/inter/releases/download/v4.0/Inter-4.0.zip", dest: /tmp }

    - name: Make personal opt directory
      file:
        path: "/home/{{ personal_username }}/opt"
        owner: "{{ personal_username }}"
        group: "{{ personal_username }}"
        recurse: yes

    - name: Download Espanso AppImage
      get_url:
        url: https://github.com/espanso/espanso/releases/download/v2.2.1/Espanso-X11.AppImage 
        dest: "/home/{{ personal_username }}/opt/Espanso-X11.AppImage"
        owner: "{{ personal_username }}"
        group: "{{ personal_username }}"
      become_user: "{{ personal_username }}"

    - name: Copy files
      copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
      with_items:
        # Atuin:
        - { src: /tmp/atuin-x86_64-unknown-linux-gnu/atuin, dest: /usr/local/bin/atuin }
        # Ubuntu Mono:
        - { src: /tmp/ubuntu-font-family-0.83/UbuntuMono-BI.ttf, dest: /usr/local/share/fonts/ }
        - { src: /tmp/ubuntu-font-family-0.83/UbuntuMono-B.ttf, dest: /usr/local/share/fonts/ }
        - { src: /tmp/ubuntu-font-family-0.83/UbuntuMono-RI.ttf, dest: /usr/local/share/fonts/ }
        - { src: /tmp/ubuntu-font-family-0.83/UbuntuMono-R.ttf, dest: /usr/local/share/fonts/ }
    
    - name: Install fonts
      command: fc-cache /usr/local/share/fonts/
    
    - name: Create .code_root
      copy:
        dest: ~/.code_root
        mode: 0644
        content: |
          export CODE_ROOT={{ code_root }}
      become_user: "{{ personal_username }}"

    - name: Create .docs_root
      copy:
        dest: ~/.docs_root
        mode: 0644
        content: |
          export DOCS_ROOT={{ docs_root }}
      become_user: "{{ personal_username }}"

    - name: Add dotfiles and other config files
      file:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: "{{ personal_username }}"
        group: "{{ personal_username }}"
        state: link
      with_items:
        - { src: "~/my/files/code/dotfiles/atuin", dest: "/home/{{ personal_username }}/.config/atuin" }
        - { src: "~/my/files/code/dotfiles/copyq/copyq.conf", dest: "/home/{{ personal_username }}/.config/copyq/copyq.conf" }
        - { src: "~/my/files/code/dotfiles/espanso", dest: "/home/{{ personal_username }}/.config/espanso" }
        - { src: "~/my/files/code/dotfiles/fish", dest: "/home/{{ personal_username }}/.config/fish" }
        - { src: "~/my/files/code/dotfiles/kitty", dest: "/home/{{ personal_username }}/.config/kitty" }
        - { src: "~/my/files/code/dotfiles/nvim", dest: "/home/{{ personal_username }}/.config/nvim" }
        - { src: "~/my/files/code/dotfiles/tmux/tmux.conf", dest: "/home/{{ personal_username }}/.tmux.conf" }
        - { src: "~/my/files/code/dotfiles/unison/{{ hostname }}.prf", dest: "/home/{{ personal_username }}/.unison/{{ hostname }}.prf" }
        - { src: "~/my/files/code/dotfiles/vim/coc-settings.json", dest: "/home/{{ personal_username }}/.vim/coc-settings.json" }
        - { src: "~/my/files/code/dotfiles/vim/colors", dest: "/home/{{ personal_username }}/.vim/colors" }
        - { src: "~/my/files/code/dotfiles/vim/vimrc", dest: "/home/{{ personal_username }}/.vimrc" }
      become_user: "{{ personal_username }}"

    - name: Create /srv/data-01
      file:
        path: /srv/data-01
        owner: "{{ personal_username }}"
        group: "{{ personal_username }}"
        state: directory

    - name: Symlink my to /srv/data-01
      file:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: "{{ personal_username }}"
        group: "{{ personal_username }}"
        state: link
      with_items:
        - { src: "$HOME/my", dest: "/srv/data-01/my" }
      become_user: "{{ personal_username }}"

    - name: Make binaries executable
      ansible.builtin.file:
        path: "{{ item.path }}"
        mode: "{{ item.mode }}"
      with_items:
        - { path: "/home/{{ personal_username }}/opt/Espanso-X11.AppImage", mode: "0755" }
        - { path: /usr/local/bin/atuin, mode: "0755" }

    - name: Change default shell to fish
      user:
        name: "{{ personal_username }}"
        shell: /usr/bin/fish
      become: true

    - name: Check if Espanso is installed on the command line
      command: which espanso
      failed_when: false
      changed_when: false
      check_mode: false
      register: espanso_exists

    - name: Create the espanso command alias
      command: "/home/{{ personal_username }}/opt/Espanso-X11.AppImage env-path register"
      when: espanso_exists.rc == 1

    - name: Get Firefox default release profile name
      find:
        paths: "/home/{{ personal_username }}/.mozilla/firefox/"
        file_type: directory
        patterns: '*.jprice'
      register: firefox_profile

    - name: Custom Firefox settings
      copy:
        dest: "{{ firefox_profile | json_query('files[*].path | [0]') | replace ('\"', '') }}/user.js"
        mode: 0644
        content: |
          user_pref("browser.aboutConfig.showWarning", false);
          user_pref("browser.aboutHomeSnippets.updateUrl", "");
          user_pref("browser.chrome.toolbar_tips", true);
          user_pref("browser.compactmode.show", true);
          user_pref("browser.discovery.enabled", false);
          user_pref("browser.download.useDownloadDir", false);
          user_pref("browser.fixup.alternate.enabled", false);
          user_pref("browser.formfill.enable", false);
          user_pref("browser.formfill.expire_days",	0);
          user_pref("browser.helperApps.deleteTempFileOnExit", true);
          user_pref("browser.newtab.preload", false);
          user_pref("browser.newtab.url", "about:blank");
          user_pref("browser.newtabpage.activity-stream.asrouter.userprefs.cfr", false);
          user_pref("browser.newtabpage.activity-stream.asrouter.userprefs.cfr.addons", false);
          user_pref("browser.newtabpage.activity-stream.enabled", false);
          user_pref("browser.newtabpage.activity-stream.feeds.section.topstories", false);
          user_pref("browser.newtabpage.activity-stream.feeds.snippets", false);
          user_pref("browser.newtabpage.directory.ping", "");
          user_pref("browser.newtabpage.directory.source", "data:text/plain,{}");
          user_pref("browser.newtabpage.enabled", false);
          user_pref("browser.newtabpage.enhanced", false);
          user_pref("browser.pocket.enabled", false);
          user_pref("browser.quitShortcut.disabled", true);
          user_pref("browser.search.context.loadInBackground", true);
          user_pref("browser.search.suggest.enabled", false);
          user_pref("browser.search.update", false);
          user_pref("browser.startup.homepage", "{{ firefox_start_page }}");
          user_pref("browser.tabs.inTitlebar", 0);
          user_pref("browser.tabs.loadBookmarksInBackground", true);
          user_pref("browser.tabs.loadBookmarksInTabs", true);
          user_pref("browser.uidensity", 1);
          user_pref("browser.uitour.enabled", false);
          user_pref("browser.uitour.enabled", false);
          user_pref("browser.urlbar.autoFill", false);
          user_pref("browser.urlbar.groupLabels.enabled", false);
          user_pref("browser.urlbar.trimURLs", false);
          user_pref("browser.warnOnQuitShortcut", false);
          user_pref("clipboard.autocopy", false);
          user_pref("datareporting.healthreport.service.enabled", false);
          user_pref("datareporting.healthreport.uploadEnabled", false);
          user_pref("datareporting.policy.dataSubmissionEnabled", false);
          user_pref("datareporting.policy.dataSubmissionEnabled", false);
          user_pref("dom.event.contextmenu.enabled", true);
          user_pref("experiments.enabled", false);
          user_pref("experiments.manifest.uri", "");
          user_pref("experiments.supported", false);
          user_pref("extensions.pocket.enabled", false);
          user_pref("layout.word_select.eat_space_to_next_word", false);
          user_pref("mousewheel.min_line_scroll_amount", 25);
          user_pref("network.allow-experiments", false);
          user_pref("privacy.trackingprotection.enabled", true);
          user_pref("privacy.trackingprotection.pbmode.enabled", true);
          user_pref("signon.rememberSignons", false);
          user_pref("toolkit.legacyUserProfileCustomizations.stylesheets", true);
          user_pref("toolkit.telemetry.archive.enabled", false);
          user_pref("toolkit.telemetry.enabled", false);
          user_pref("toolkit.telemetry.unified", false);

    - name: Make Firefox chrome directory for userChrome.css
      file:
        path: "{{ firefox_profile | json_query('files[*].path | [0]') | replace ('\"', '') }}/chrome"
        owner: "{{ personal_username }}"
        group: "{{ personal_username }}"
        recurse: yes

    - name: Custom Firefox userChrome for Tab Center Reborn Sidebar Tabs
      copy:
        dest: "{{ firefox_profile | json_query('files[*].path | [0]') | replace ('\"', '') }}/chrome/userChrome.css"
        mode: 0644
        owner: "{{ personal_username }}"
        group: "{{ personal_username }}"
        content: |
          /* This hides the tab bar which contains the new tab button, pinned tabs and
           * the tab list. I then use Sidebery for managing tabs, and enable the "Title
           * Bar" in the "Customise Menu". */
          #titlebar,
          .browser-titlebar,
          #main-menubar {
              display: none;
          }

          /* I don't want to remove the sidebar title, but I do want the font-size to be
           * smaller. */
          #sidebar-header {
            font-size: 1.1em !important;
          }

    - name: Create custom Gnome Shell theme
      copy:
        dest: "/home/{{ personal_username }}/.themes/custom/gnome-shell/gnome-shell.css"
        mode: 0644
        owner: "{{ personal_username }}"
        group: "{{ personal_username }}"
        content: |
          @import url("resource:///org/gnome/theme/gnome-shell.css");

          stage {
              font-family: Inter;
              font-size: 13px;
          }
    
    - name: Set Gnome dconf preferences
      community.general.dconf:
        key: "{{ item.key }}"
        value: "{{ item.value }}"
        state: "{{ item.state }}"
      become_user: "{{ personal_username }}"
      with_items:
        - { key: "/org/gnome/desktop/background/picture-options", value: "'stretched'", state: "present" }
        - { key: "/org/gnome/desktop/background/picture-uri", value: "'file:///home/jprice/my/files/media/pictures/wallpaper/desktop/893848.png'", state: "present" }
        - { key: "/org/gnome/desktop/input-sources/xkb-options", value: "['caps:none']", state: "present" }
        - { key: "/org/gnome/desktop/interface/clock-format", value: "'24h'", state: "present" }
        - { key: "/org/gnome/desktop/interface/clock-show-weekday", value: "true", state: "present" }
        - { key: "/org/gnome/desktop/interface/font-name", value: "'Inter Regular 10'", state: "present" }
        - { key: "/org/gnome/desktop/interface/document-font-name", value: "'Inter Regular 10'", state: "present" }
        - { key: "/org/gnome/desktop/interface/gtk-theme", value: "'Adwaita-dark'", state: "present" }
        - { key: "/org/gnome/desktop/interface/monospace-font-name", value: "'Ubuntu Mono Regular 13'", state: "present" }
        - { key: "/org/gnome/desktop/peripherals/keyboard/delay", value: "uint32 250", state: "present" }
        - { key: "/org/gnome/desktop/peripherals/keyboard/numlock-state", value: "true", state: "present" }
        - { key: "/org/gnome/desktop/peripherals/keyboard/repeat-interval", value: "uint32 20", state: "present" }
        - { key: "/org/gnome/desktop/peripherals/touchpad/natural-scroll", value: "true", state: "present" }
        - { key: "/org/gnome/desktop/peripherals/touchpad/tap-to-click", value: "true", state: "present" }
        - { key: "/org/gnome/desktop/screensaver/idle-activation-enabled", value: "false", state: "present" }
        - { key: "/org/gnome/desktop/session/idle-delay", value: "uint32 0", state: "present" }
        - { key: "/org/gnome/desktop/thumbnail-cache/touchpad/natural-scroll", value: "true", state: "present" }
        - { key: "/org/gnome/desktop/wm/keybindings/move-to-center", value: "['<Control><Super>c']", state: "present" }
        - { key: "/org/gnome/desktop/wm/keybindings/show-desktop", value: "['<Super>d']", state: "present" }
        - { key: "/org/gnome/desktop/wm/keybindings/switch-applications", value: "['<Alt>Tab']", state: "present" }
        - { key: "/org/gnome/desktop/wm/preferences/button-layout", value: "'appmenu:minimize,maximize,close'", state: "present" }
        - { key: "/org/gnome/desktop/wm/preferences/titlebar-font", value: "'Inter Regular 10'", state: "present" }
        - { key: "/org/gnome/mutter/attach-modal-dialogs", value: "false", state: "present" }
        - { key: "/org/gnome/mutter/center-new-windows", value: "true", state: "present" }
        - { key: "/org/gnome/nautilus/preferences/always-use-location-entry", value: "false", state: "present" }
        - { key: "/org/gnome/nautilus/preferences/default-folder-viewer", value: "'list-view'", state: "present" }
        - { key: "/org/gnome/nautilus/preferences/recursive-search", value: "'always'", state: "present" }
        - { key: "/org/gnome/nautilus/preferences/show-create-link", value: "true", state: "present" }
        - { key: "/org/gnome/nautilus/preferences/show-delete-permanently", value: "true", state: "present" }
        - { key: "/org/gnome/nautilus/preferences/show-directory-item-counts", value: "'always'", state: "present" }
        - { key: "/org/gnome/nautilus/preferences/show-image-thumbnails", value: "'always'", state: "present" }
        - { key: "/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings", value: "['/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/', '/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom1/', '/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom2/', '/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom3/']", state: "present" }
        - { key: "/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/binding", value: "'<Shift><Alt>c'", state: "present" }
        - { key: "/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/command", value: "'copyq show'", state: "present" }
        - { key: "/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/name", value: "'Show CopyQ Window'", state: "present" }
        - { key: "/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom1/binding", value: "'<Shift><Alt>x'", state: "present" }
        - { key: "/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom1/command", value: "'/usr/bin/flameshot gui'", state: "present" }
        - { key: "/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom1/name", value: "'Open Flameshot GUI'", state: "present" }
        - { key: "/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom2/binding", value: "'<Super>e'", state: "present" }
        - { key: "/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom2/command", value: "'nautilus'", state: "present" }
        - { key: "/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom2/name", value: "'Open Nautilus'", state: "present" }
        - { key: "/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom3/binding", value: "'<Shift><Alt>b'", state: "present" }
        - { key: "/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom3/command", value: "'/usr/bin/bash /home/jprice/my/files/code/bash-scripts/toggle_bluetooth.sh'", state: "present" }
        - { key: "/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom3/name", value: "'Toggle Bluetooth'", state: "present" }
        - { key: "/org/gnome/settings-daemon/plugins/media-keys/play", value: "['<Shift><Super>p']", state: "present" }
        - { key: "/org/gnome/settings-daemon/plugins/power/ambient-enabled", value: "false", state: "present" }
        - { key: "/org/gnome/settings-daemon/plugins/power/idle-dim", value: "false", state: "present" }
        - { key: "/org/gnome/settings-daemon/plugins/power/sleep-inactive-ac-type", value: "'nothing'", state: "present" }
        - { key: "/org/gnome/settings-daemon/plugins/power/sleep-inactive-battery-type", value: "'nothing'", state: "present" }
        - { key: "/org/gnome/shell/favorite-apps", value: "['firefox.desktop', 'kitty.desktop', 'md.obsidian.Obsidian.desktop', 'org.gnome.Nautilus.desktop', 'org.telegram.desktop.desktop']", state: "present" }
        - { key: "/org/gnome/shell/keybindings/toggle-overview", value: "['<Super>Tab']", state: "present" }
        - { key: "/org/gtk/settings/file-chooser/sort-directories-first", value: "true", state: "present" }
        - { key: "/org/gnome/nautilus/list-view/default-visible-columns", value: "['name', 'size', 'type', 'date_modified']", state: "present" }
        - { key: "/org/gnome/nautilus/list-view use-tree-view", value: "true", state: "present" }

    - name: Sort Gnome applications screen alphabetically
      command: gsettings set org.gnome.shell app-picker-layout "[]"

    - name: Create Nautilus bookmarks
      copy:
        dest: /home/{{ personal_username }}/.config/gtk-3.0/bookmarks
        mode: 0644
        content: |
          file:///home/jprice/Downloads
          file:///home/jprice/my/files/inbox
          file:///home/jprice/my/files/documents/SIFT
          file:///home/jprice/my/files/documents/finances
          file:///home/jprice/my/files/code
          file:///home/jprice/my
          file:///home/jprice/Screenshots
      become_user: "{{ personal_username }}"

    - name: Disable caps lock key
      command: setxkbmap -option ctrl:nocaps
      # Renable with `setxkbmap -option`

    - name: Configure Git user and email
      community.general.git_config:
        name: "{{ item.name }}"
        scope: global
        value: "{{ item.value }}"
      with_items:
        - { name: user.name, value: "{{ git_config_user_name }}" }
        - { name: user.email, value: "{{ git_config_user_email }}" }
        - { name: init.defaultBranch, value: master }
      become_user: "{{ personal_username }}"

    - name: Copy logind.conf
      ansible.builtin.copy:
        src: /usr/lib/systemd/logind.conf
        dest: /etc/systemd/logind.conf

    - name: Laptop lid closure settings
      replace:
        path: /etc/systemd/logind.conf
        regexp: "{{ item.regexp }}"
        replace: "{{ item.replace }}"
      with_items:
        # Suspend when on battery:
        - { regexp: "#HandleLidSwitch=suspend", replace: "HandleLidSwitch=suspend" }
        # Don't suspend when on dock:
        - { regexp: "#HandleLidSwitchDocked=ignore", replace: "HandleLidSwitchDocked=ignore" }
        # Suspend when on power:
        - { regexp: "#HandleLidSwitchExternalPower=suspend", replace: "HandleLidSwitchExternalPower=suspend" }

    - name: Ensure Gnome titlebar is dark
      # https://discussion.fedoraproject.org/t/setting-dark-theme-for-certain-applications/135134/9
      copy:
        dest: /etc/environment
        content: |
          MUTTER_FRAMES_PLATFORM_LIBRARY=none

    - name: Enable & start services
      ansible.builtin.systemd:
        name: "{{ item.name }}"
        enabled: yes
        state: started
      with_items:
        - { name: crond }
        - { name: docker }

